{"version":3,"sources":["components/common/logo.png","helpers.js","components/common/Loading.js","config.js","components/common/Search.js","components/common/Header.js","components/list/Pagination.js","components/list/Table.js","components/list/List.js","components/detail/Detail.js","components/homepage/HomePage.js","index.js"],"names":["module","exports","__webpack_require__","p","handleResponse","response","json","then","ok","Promise","reject","renderChangePercent","changePercent","react_default","a","createElement","className","Loading","props","width","height","style","defaultProps","API_URL","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","searchQuery","loading","handleRedirect","bind","assertThisInitialized","handleChange","e","_this2","target","value","setState","fetch","concat","result","currencyId","history","push","_this3","_this$state","length","map","key","id","onClick","name","symbol","_this$state2","onChange","type","placeholder","components_common_Loading","renderSearchResults","React","Component","withRouter","Header","react_router_dom","to","src","logo","alt","components_common_Search","Pagination","totalPages","page","handlePaginationClick","disabled","currencies","currency","rank","price","marketCap","percentChange24h","List","perPage","error","fetchCurrencies","data","catch","errorMessage","direction","nextPage","components_list_Table","components_list_Pagination","Detail","match","params","fetchCurrency","nextProps","location","pathname","volume24h","totalSupply","HomePage","ReactDOM","render","components_common_Header","react_router","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.32964dd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c0436d5.png\";","import React from 'react';\n\n/**\n * Fetch response helper\n * \n * @param {object} response \n */\nexport const handleResponse = (response) => {\n  return response.json()\n    .then(json => {\n      if (response.ok) {\n        return json\n      } else {\n        return Promise.reject(json)\n      }\n    })\n}\n\n/**\n * Render change percent\n * \n * Show green text and up arrow if 24h percentage change has been raised\n * Red text and down arrow if it has fallen\n * Default text color without arrow, if it's zero\n * \n * @param {number} changePercent\n */\nexport const renderChangePercent = (changePercent) => {\n  if (changePercent > 0) {\n    return <span className=\"percent-raised\">{changePercent}% &uarr;</span>\n  } else if (changePercent < 0) {\n    return <span className=\"percent-fallen\">{changePercent}% &darr;</span>\n  } else {\n    return <span>{changePercent}</span>\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  const { width, height } = props;\n\n  return (\n    <div\n      className=\"Loading\"\n      style={{ width, height }}\n    />\n  );\n};\n\nLoading.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  width: '28px',\n  height: '28px',\n};\n\nexport default Loading;\n","/**\n * API url\n */\nexport const API_URL = 'https://api.udilia.com/coins/v1';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { handleResponse } from '../../helpers.js';\nimport Loading from '../common/Loading';\nimport { API_URL } from '../../config';\nimport './Search.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchResults: [],\n      searchQuery: '',\n      loading: false,\n    }\n\n    this.handleRedirect = this.handleRedirect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const searchQuery = e.target.value;\n\n    this.setState({ searchQuery });\n\n    // If searchQuery isn't present, don't send request to server\n    if (!searchQuery) {\n      return false;\n    }\n\n    // Set loading to true, while we are fetching data from server\n    this.setState({ loading: true });\n\n    fetch(`${API_URL}/autocomplete?searchQuery=${searchQuery}`)\n      .then(handleResponse)\n      .then((result) => {\n        this.setState({\n          searchResults: result,\n          loading: false,\n        });\n      });\n  }\n\n  handleRedirect(currencyId) {\n    // Clear input value and close autocomplete container,\n    // by clearing searchQuery state\n    this.setState({\n      searchQuery: '',\n      searchResults: [],\n    });\n\n    // Redirect to currency page\n    this.props.history.push(`/currency/${currencyId}`);\n  }\n\n  renderSearchResults() {\n    const { searchResults, searchQuery, loading } = this.state;\n\n    if (!searchQuery) {\n      return '';\n    }\n    \n    if (searchResults.length > 0) {\n      return (\n        <div className=\"Search-result-container\">\n          {searchResults.map(result =>\n            <div\n              key={result.id}\n              className=\"Search-result\"\n              onClick={() => this.handleRedirect(result.id)}\n            >\n              {result.name} ({result.symbol})\n            </div>\n          )}\n        </div>\n      )\n    }\n\n    // Send no result, only if loading is set to false\n    // To avoid showing no result, when actually there are ones\n    if (!loading) {\n      return (\n        <div className=\"Search-result-container\">\n          <div className=\"Search-no-result\">\n            No results found.\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const { searchQuery, loading } = this.state;\n\n    return (\n      <div className='Search'>\n        <div>\n          <span className=\"Search-icon\" />\n          <input \n            onChange={this.handleChange}\n            type=\"text\"\n            className=\"Search-input\"\n            placeholder=\"Currency name\"\n            value={searchQuery}\n          />\n\n          {loading &&\n            <div className=\"Search-loading\">\n              <Loading\n                width=\"12px\"\n                height=\"12px\"\n              />\n            </div>}\n        </div>\n\n        {this.renderSearchResults()}\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  history: PropTypes.object.isRequired,\n}\n\nexport default withRouter(Search);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\nimport logo from './logo.png';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <Link to=\"/\">\n        <img src={logo} alt=\"logo\" className=\"Header-logo\" />\n      </Link>\n\n      <Search />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nconst Pagination = (props) => {\n  const { totalPages, page, handlePaginationClick } = props;\n\n  return (\n    <div className=\"Pagination\">\n      <button\n        className=\"Pagination-button\"\n        disabled={page <= 1}\n        onClick={() => handlePaginationClick('prev')}\n      >\n        &larr;\n      </button>\n\n      <span className=\"Pagination-info\">\n        Page <b>{page}</b> of <b>{totalPages}</b>\n      </span>\n\n      <button\n        className=\"Pagination-button\"\n        disabled={page === totalPages}\n        onClick={() => handlePaginationClick('next')}\n      >\n        &rarr;\n      </button>\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  handlePaginationClick: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { renderChangePercent } from '../../helpers';\nimport './Table.css';\n\nconst Table = (props) => {\n  const { history, currencies } = props;\n\n  return (\n    <div className=\"Table-container\">\n      <table className=\"Table\">\n        <thead className=\"Table-head\">\n          <tr>\n            <th>Cryptocurrency</th>\n            <th>Price</th>\n            <th>Market Cap</th>\n            <th>24H Change</th>\n          </tr>\n        </thead>\n        <tbody className=\"Table-body\">\n          {currencies.map(currency =>\n            <tr\n              key={currency.id}\n              onClick={() => history.push(`/currency/${currency.id}`)}\n            >\n              <td>\n                <span className=\"Table-rank\">{currency.rank}</span>\n                {currency.name}\n              </td>\n              <td>\n                <span className=\"Table-dollar\">$</span>\n                {currency.price}\n              </td>\n              <td>\n                <span className=\"Table-dollar\">$</span>\n                {currency.marketCap}\n              </td>\n              <td>{renderChangePercent(currency.percentChange24h)}</td>\n            </tr>)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTable.propTypes = {\n  currencies: PropTypes.array.isRequired,\n  history: PropTypes.object.isRequired,\n}\n\nexport default withRouter(Table);\n","import React from 'react';\nimport { API_URL } from '../../config';\nimport { handleResponse } from '../../helpers.js';\nimport Pagination from './Pagination';\nimport Loading from '../common/Loading';\nimport Table from './Table';\n\nclass List extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      page: 1,\n      totalPages: 0,\n      // NOTE: Don't set it greater than 50, because maximum perPage for API is 50\n      perPage: 20,\n      currencies: [],\n      loading: false,\n      error: '',\n    };\n\n    this.handlePaginationClick = this.handlePaginationClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.fetchCurrencies();\n  }\n\n  fetchCurrencies() {\n    const { page, perPage } = this.state;\n\n    // Set loading to true, while we are fetching data from server\n    this.setState({ loading: true });\n\n    // Fetch crypto currency data from API with page and perPage parameters\n    fetch(`${API_URL}/cryptocurrencies/?page=${page}&perPage=${perPage}`)\n      .then(handleResponse)\n      .then((data) => {\n        // Set received data in components state\n        // Clear error if any and set loading to false\n        const { totalPages, currencies } = data;\n\n        this.setState({\n          currencies,\n          totalPages,\n          error: '',\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        // Show error message, if request fails and set loading to false\n        this.setState({\n          error: error.errorMessage,\n          loading: false,\n        });\n      });\n  }\n\n  handlePaginationClick(direction) {\n    let nextPage = this.state.page;\n\n    // Increment nextPage if direction variable is next, otherwise decrement it\n    nextPage = direction === 'next' ? nextPage + 1 : nextPage - 1;\n\n    // Call fetchCurrencies function inside setState's callback\n    // Because we have to make sure first page state is updated\n    this.setState({ page: nextPage }, () => {\n      this.fetchCurrencies();\n    });\n  }\n\n  render() {\n    const { currencies, loading, error, page, totalPages } = this.state;\n\n    // Render only loading component, if it's set to true\n    if (loading) {\n      return <div className=\"loading-container\"><Loading /></div>\n    }\n\n    // Render only error message, if error occured while fetching data\n    if (error) {\n      return <div className=\"error\">{error}</div>\n    }\n\n    return (\n      <div>\n        <Table currencies={currencies} />\n\n        <Pagination\n          page={page}\n          totalPages={totalPages}\n          handlePaginationClick={this.handlePaginationClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React from 'react';\nimport { API_URL } from '../../config';\nimport { handleResponse, renderChangePercent } from '../../helpers.js';\nimport Loading from '../common/Loading';\nimport './Detail.css';\n\nclass Detail extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currency: {},\n      error: '',\n      loading: false,\n    }\n  }\n\n  componentWillMount() {\n    // Get id from url params\n    const currencyId = this.props.match.params.id;\n\n    // Fetch currency\n    this.fetchCurrency(currencyId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      // Get id from new url params\n      const currencyId = nextProps.match.params.id;\n      \n      // Fetch currency\n      this.fetchCurrency(currencyId);\n    }\n  }\n\n  fetchCurrency(currencyId) {\n    // Set loading to true, while we are fetching data from server\n    this.setState({ loading: true });\n\n    fetch(`${API_URL}/cryptocurrencies/${currencyId}`)\n      .then(handleResponse)\n      .then((currency) => {\n        // Set received data in components state\n        // Clear error if any and set loading to false\n        this.setState({\n          currency,\n          error: '',\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        // Show error message, if request fails and set loading to false\n        this.setState({\n          error: error.errorMessage,\n          loading: false,\n        });\n      });\n  }\n\n  render() {\n    const { currency, loading, error } = this.state;\n\n    // Render only loading component, if loading state is set to true\n    if (loading) {\n      return <div className=\"loading-container\"><Loading /></div>\n    }\n\n    // Render only error message, if error occured while fetching data\n    if (error) {\n      return <div className=\"error\">{error}</div>\n    }\n\n    return (\n      <div className=\"Detail\">\n        <h1 className=\"Detail-heading\">\n          {currency.name} ({currency.symbol})\n        </h1>\n\n        <div className=\"Detail-container\">\n          <div className=\"Detail-item\">\n            Price <span className=\"Detail-value\">$ {currency.price}</span>\n          </div>\n          <div className=\"Detail-item\">\n            Rank <span className=\"Detail-value\">{currency.rank}</span>\n          </div>\n          <div className=\"Detail-item\">\n            24H change\n            <span className=\"Detail-value\">\n              {renderChangePercent(currency.percentChange24h)}\n            </span>\n          </div>\n          <div className=\"Detail-item\">\n            <span className=\"Detail-title\">Market cap</span>\n            <span className=\"Detail-dollar\">$</span>\n            {currency.marketCap}\n          </div>\n          <div className=\"Detail-item\">\n          <span className=\"Detail-title\">24H Volume</span>\n            <span className=\"Detail-dollar\">$</span>\n            {currency.volume24h}\n          </div>\n          <div className=\"Detail-item\">\n            <span className=\"Detail-title\">Total supply</span>\n            {currency.totalSupply}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './HomePage.css';\n\nconst HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"HomePage-title\">Welcome to the Cryptocurrency Price Index</h1>\n      <Link to=\"/\" className=\"HomePage-link\">start!!</Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport Header from './components/common/Header';\nimport List from './components/list/List';\nimport Detail from './components/detail/Detail';\nimport HomePage from './components/homepage/HomePage';\nimport './index.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          <Route exact path=\"/currency/:id\" component={Detail} />\n          <Route component={HomePage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}